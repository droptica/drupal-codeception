diff --git a/src/Definition/Parameter.php b/src/Definition/Parameter.php
index 8fd5d36..5d02e66 100644
--- a/src/Definition/Parameter.php
+++ b/src/Definition/Parameter.php
@@ -2,7 +2,7 @@
 
 namespace ElevenLabs\Api\Definition;
 
-class Parameter implements \Serializable
+class Parameter
 {
     const LOCATIONS = ['path', 'header', 'query', 'body', 'formData'];
     const BODY_LOCATIONS = ['formData', 'body'];
@@ -70,7 +70,7 @@ class Parameter implements \Serializable
         return $this->schema !== null;
     }
 
-    public function serialize()
+    public function __serialize()
     {
         return serialize([
             'location' => $this->location,
@@ -80,7 +80,7 @@ class Parameter implements \Serializable
         ]);
     }
 
-    public function unserialize($serialized)
+    public function __unserialize($serialized)
     {
         $data = unserialize($serialized);
         $this->location = $data['location'];
diff --git a/src/Definition/Parameters.php b/src/Definition/Parameters.php
index 922bf1d..fcee768 100644
--- a/src/Definition/Parameters.php
+++ b/src/Definition/Parameters.php
@@ -2,7 +2,7 @@
 
 namespace ElevenLabs\Api\Definition;
 
-class Parameters implements \Serializable, \IteratorAggregate
+class Parameters implements \IteratorAggregate
 {
     /**
      * @var Parameter[]
@@ -17,6 +17,7 @@ class Parameters implements \Serializable, \IteratorAggregate
     }
 
     // IteratorAggregate
+    #[\ReturnTypeWillChange]
     public function getIterator(): iterable
     {
         foreach ($this->parameters as $name => $parameter) {
@@ -151,13 +152,13 @@ class Parameters implements \Serializable, \IteratorAggregate
     }
 
     // Serializable
-    public function serialize()
+    public function __serialize()
     {
         return serialize(['parameters' => $this->parameters]);
     }
 
     // Serializable
-    public function unserialize($serialized)
+    public function __unserialize($serialized)
     {
         $data = unserialize($serialized);
         $this->parameters = $data['parameters'];
diff --git a/src/Definition/RequestDefinition.php b/src/Definition/RequestDefinition.php
index 19b7624..1c31f90 100644
--- a/src/Definition/RequestDefinition.php
+++ b/src/Definition/RequestDefinition.php
@@ -2,7 +2,7 @@
 
 namespace ElevenLabs\Api\Definition;
 
-class RequestDefinition implements \Serializable, MessageDefinition
+class RequestDefinition implements MessageDefinition
 {
     /** @var string */
     private $method;
@@ -130,7 +130,7 @@ class RequestDefinition implements \Serializable, MessageDefinition
     }
 
     // Serializable
-    public function serialize()
+    public function __serialize()
     {
         return serialize([
             'method' => $this->method,
@@ -143,7 +143,7 @@ class RequestDefinition implements \Serializable, MessageDefinition
     }
 
     // Serializable
-    public function unserialize($serialized)
+    public function __unserialize($serialized)
     {
         $data = unserialize($serialized);
         $this->method = $data['method'];
diff --git a/src/Definition/RequestDefinitions.php b/src/Definition/RequestDefinitions.php
index 1bfd336..dd5eac1 100644
--- a/src/Definition/RequestDefinitions.php
+++ b/src/Definition/RequestDefinitions.php
@@ -2,7 +2,7 @@
 
 namespace ElevenLabs\Api\Definition;
 
-class RequestDefinitions implements \Serializable, \IteratorAggregate
+class RequestDefinitions implements \IteratorAggregate
 {
     /** @var RequestDefinition[] */
     private $definitions = [];
@@ -27,6 +27,7 @@ class RequestDefinitions implements \Serializable, \IteratorAggregate
     }
 
     // IteratorAggregate
+    #[\ReturnTypeWillChange]
     public function getIterator(): iterable
     {
         foreach ($this->definitions as $operationId => $requestDefinition) {
@@ -35,7 +36,7 @@ class RequestDefinitions implements \Serializable, \IteratorAggregate
     }
 
     // Serializable
-    public function serialize()
+    public function __serialize()
     {
         return serialize([
             'definitions' => $this->definitions
@@ -43,7 +44,7 @@ class RequestDefinitions implements \Serializable, \IteratorAggregate
     }
 
     // Serializable
-    public function unserialize($serialized)
+    public function __unserialize($serialized)
     {
         $data = unserialize($serialized);
         $this->definitions = $data['definitions'];
diff --git a/src/Definition/ResponseDefinition.php b/src/Definition/ResponseDefinition.php
index 8b009ca..40dae70 100644
--- a/src/Definition/ResponseDefinition.php
+++ b/src/Definition/ResponseDefinition.php
@@ -2,7 +2,7 @@
 
 namespace ElevenLabs\Api\Definition;
 
-class ResponseDefinition implements \Serializable, MessageDefinition
+class ResponseDefinition implements MessageDefinition
 {
     /** @var int|string */
     private $statusCode;
@@ -63,7 +63,7 @@ class ResponseDefinition implements \Serializable, MessageDefinition
     }
 
     // Serializable
-    public function serialize()
+    public function __serialize()
     {
         return serialize([
             'statusCode' => $this->statusCode,
@@ -73,7 +73,7 @@ class ResponseDefinition implements \Serializable, MessageDefinition
     }
 
     // Serializable
-    public function unserialize($serialized)
+    public function __unserialize($serialized)
     {
         $data = unserialize($serialized);
         $this->statusCode = $data['statusCode'];
diff --git a/src/Schema.php b/src/Schema.php
index 49c765d..83af695 100644
--- a/src/Schema.php
+++ b/src/Schema.php
@@ -6,7 +6,7 @@ use ElevenLabs\Api\Definition\RequestDefinition;
 use ElevenLabs\Api\Definition\RequestDefinitions;
 use Rize\UriTemplate;
 
-class Schema implements \Serializable
+class Schema
 {
     /** @var RequestDefinitions */
     private $requestDefinitions;
@@ -83,7 +83,7 @@ class Schema implements \Serializable
     }
 
     // Serializable
-    public function serialize()
+    public function __serialize()
     {
         return serialize([
             'host' => $this->host,
@@ -94,7 +94,7 @@ class Schema implements \Serializable
     }
 
     // Serializable
-    public function unserialize($serialized)
+    public function __unserialize($serialized)
     {
         $data = unserialize($serialized);
         $this->host = $data['host'];
